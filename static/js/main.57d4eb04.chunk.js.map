{"version":3,"sources":["constants/index.js","App.jsx","index.js"],"names":["module","exports","WEBCAM_HEIGHT","WEBCAM_WIDTH","EXPRESSION_DETECTION_INTERVAL_MS","TIMER_INTERVAL_MS","VIDEO_CONSTRAINTS","width","this","height","facingMode","MODEL_URL","App","props","getFullFaceDescription","pictureSrc","a","faceapi","image","withFaceExpressions","undefined","detections","console","log","expressions","detectedExpression","Object","keys","reduce","b","setState","isDetected","loadModels","process","tinyFaceDetector","loadFromUri","faceExpressionNet","startGame","hasStarted","state","startingTimer","timerStart","setInterval","clearInterval","startCapturing","imageSrc","webcam","current","getScreenshot","fullFaceDescriptions","canvas","React","createRef","canvasPicWebCam","isLoading","then","prevProps","prevState","snapshot","Container","className","audio","ref","screenshotFormat","videoConstraints","style","display","Image","src","Button","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57d4eb04.chunk.js","sourcesContent":["module.exports.WEBCAM_HEIGHT = 480;\nmodule.exports.WEBCAM_WIDTH = 480;\nmodule.exports.EXPRESSION_DETECTION_INTERVAL_MS = 250;\nmodule.exports.TIMER_INTERVAL_MS = 1000;\n\nmodule.exports.VIDEO_CONSTRAINTS = {\n  width: this.WEBCAM_WIDTH,\n  height: this.WEBCAM_HEIGHT,\n  facingMode: 'user',\n};\n\nmodule.exports.MODEL_URL = '/models';\n","import React, { Component } from 'react';\nimport * as faceapi from 'face-api.js';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Webcam from 'react-webcam';\nimport Button from 'react-bootstrap/Button';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { EXPRESSION_DETECTION_INTERVAL_MS, MODEL_URL, WEBCAM_HEIGHT, WEBCAM_WIDTH, VIDEO_CONSTRAINTS, TIMER_INTERVAL_MS } from './constants';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.fullFaceDescriptions = null;\n    this.canvas = React.createRef();\n    this.canvasPicWebCam = React.createRef();\n    this.webcam = React.createRef();\n\n    this.state = {\n      isLoading: true,\n      isDetected: false,\n      hasStarted: false,\n      detectedExpression: 'neutral',\n      startingTimer: 3,\n    };\n  }\n\n  async componentDidMount() {\n    this.loadModels().then(() => {\n      this.startCapturing();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { hasStarted, startingTimer } = this.state;\n\n    if (hasStarted === true && startingTimer === 3) {\n\n    }\n    console.log(prevProps.startingTimer);\n  }\n\n    getFullFaceDescription = async (pictureSrc) => {\n      const image = await faceapi.fetchImage(pictureSrc);\n\n      const detections = await faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n\n      if (detections !== undefined) {\n        console.log(detections.expressions);\n\n        const detectedExpression = Object.keys(detections.expressions).reduce((a, b) => (detections.expressions[a] > detections.expressions[b] ? a : b));\n\n        this.setState({\n          isDetected: true,\n          detectedExpression,\n        });\n      } else {\n        this.setState({\n          isDetected: false,\n        });\n      }\n    };\n\n    loadModels = async () => {\n      await faceapi.loadTinyFaceDetectorModel(process.env.PUBLIC_URL + MODEL_URL);\n      await faceapi.nets.tinyFaceDetector.loadFromUri(process.env.PUBLIC_URL + MODEL_URL);\n\n      await faceapi.loadFaceExpressionModel(process.env.PUBLIC_URL + MODEL_URL);\n      await faceapi.nets.faceExpressionNet.loadFromUri(process.env.PUBLIC_URL + MODEL_URL);\n    };\n\n  startGame = () => {\n    const { hasStarted } = this.state;\n    let { startingTimer } = this.state;\n\n    this.setState({\n      hasStarted: !hasStarted,\n    });\n\n    const timerStart = setInterval(() => {\n      if (startingTimer === 1) {\n        clearInterval(timerStart);\n      }\n\n      startingTimer -= 1;\n\n      this.setState({\n        startingTimer,\n      });\n    }, TIMER_INTERVAL_MS);\n  };\n\n    startCapturing = () => {\n      setInterval(() => {\n        const imageSrc = this.webcam.current.getScreenshot();\n\n        this.getFullFaceDescription(imageSrc);\n      }, EXPRESSION_DETECTION_INTERVAL_MS);\n    };\n\n    render() {\n      const { isDetected, detectedExpression, isLoading, hasStarted, startingTimer } = this.state;\n      console.log(startingTimer);\n      return (\n        <Container>\n          <div className={hasStarted ? 'webcam-faces hasStarted' : 'webcam-faces'}>\n            <Webcam\n              className=\"webcam\"\n              audio={false}\n              width={WEBCAM_WIDTH}\n              height={WEBCAM_HEIGHT}\n              ref={this.webcam}\n              screenshotFormat=\"image/jpeg\"\n              videoConstraints={VIDEO_CONSTRAINTS}\n            />\n            <div\n              style={{ display: 'none' }}\n            >\n              <canvas ref={this.canvasPicWebCam} width={WEBCAM_WIDTH} height={WEBCAM_HEIGHT} />\n            </div>\n            <div className={hasStarted ? 'emoji-timer-container hasStarted' : 'emoji-timer-container'}>\n              {\n                hasStarted && startingTimer !== 0\n                  ? <p className=\"timer\">{startingTimer}</p>\n                  : <Image className={hasStarted ? 'emoji hasStarted' : 'emoji'} src={`/img/${detectedExpression}.png`} />\n               }\n            </div>\n          </div>\n          <div className=\"current_expression-container\">\n            <Image className=\"current_expression-emoji\" src={`/img/${detectedExpression}.png`} />\n          </div>\n          <div className=\"controls\">\n            <Button\n              variant=\"primary\"\n              onClick={this.startGame}\n            >\n              Start game\n            </Button>\n          </div>\n        </Container>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}