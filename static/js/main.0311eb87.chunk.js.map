{"version":3,"sources":["constants/index.js","App.jsx","index.js"],"names":["module","exports","WEBCAM_HEIGHT","WEBCAM_WIDTH","EXPRESSION_DETECTION_INTERVAL_MS","TIMER_INTERVAL_MS","EXPRESSIONS_ANGRY","EXPRESSIONS_HAPPY","EXPRESSIONS_NEUTRAL","EXPRESSIONS_SAD","EXPRESSIONS_SURPRISED","EXPRESSIONS","this","VIDEO_CONSTRAINTS","width","height","facingMode","MODEL_URL","process","IMAGES_URL","App","props","getFullFaceDescription","pictureSrc","a","faceapi","image","withFaceExpressions","undefined","detections","console","log","expressions","detectedExpression","Object","keys","reduce","b","setState","isDetected","loadModels","gameLogicStart","state","gameTimerIntervalID","gameTimer","correctEmotionTimerIntervalID","gameCorrectEmotionTimer","gameScore","setInterval","gameLogicStop","clearInterval","hasStarted","startGame","startingTimer","intervalID","startCapturing","imageSrc","webcam","current","getScreenshot","fullFaceDescriptions","canvas","React","createRef","canvasPicWebCam","isLoading","randomExpression","sample","then","prevProps","prevState","snapshot","Container","className","audio","ref","screenshotFormat","videoConstraints","style","display","Image","src","Button","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAQC,cAAgB,IAC/BF,EAAOC,QAAQE,aAAe,IAC9BH,EAAOC,QAAQG,iCAAmC,IAClDJ,EAAOC,QAAQI,kBAAoB,IACnCL,EAAOC,QAAQK,kBAAoB,QACnCN,EAAOC,QAAQM,kBAAoB,QACnCP,EAAOC,QAAQO,oBAAsB,UACrCR,EAAOC,QAAQQ,gBAAkB,MACjCT,EAAOC,QAAQS,sBAAwB,YACvCV,EAAOC,QAAQU,YAAc,CAACC,KAAKN,kBAAmBM,KAAKL,kBAAmBK,KAAKJ,oBAAqBI,KAAKH,gBAAiBG,KAAKF,uBAEnIV,EAAOC,QAAQY,kBAAoB,CACjCC,MAAOF,KAAKT,aACZY,OAAQH,KAAKV,cACbc,WAAY,QAGdhB,EAAOC,QAAQgB,UAAf,UAA8BC,WAA9B,WACAlB,EAAOC,QAAQkB,WAAf,UAA+BD,WAA/B,U,0WCIqBE,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgCNC,uBAjCiB,uCAiCQ,WAAOC,GAAP,mBAAAC,EAAA,sEACHC,IAAmBF,GADhB,cACjBG,EADiB,gBAGED,IAAyBC,EAAO,IAAID,KAAmCE,sBAHzE,YAKJC,KAFbC,EAHiB,SAMrBC,QAAQC,IAAIF,EAAWG,aAEjBC,EAAqBC,OAAOC,KAAKN,EAAWG,aAAaI,QAAO,SAACZ,EAAGa,GAAJ,OAAWR,EAAWG,YAAYR,GAAKK,EAAWG,YAAYK,GAAKb,EAAIa,KAE7I,EAAKC,SAAS,CACZC,YAAY,EACZN,wBAGF,EAAKK,SAAS,CACZC,YAAY,IAhBO,2CAjCR,wDAsDjBC,WAtDiB,sBAsDJ,sBAAAhB,EAAA,sEACLC,IAAkCR,aAD7B,uBAELQ,IAAgCR,aAF3B,2CAtDI,EA2DjBwB,eAAiB,WAAO,IAAD,EAMjB,EAAKC,MALHC,EADe,EACfA,oBAIJC,GALmB,EAEnBC,8BAFmB,EAGnBC,wBAHmB,EAInBC,UAJmB,EAKnBH,WAGF,EAAKN,SACH,CAAES,UAAW,IAGfJ,EAAsBK,aAAY,WACd,IAAdJ,EACF,EAAKK,iBAELL,GAAa,EACbd,QAAQC,IAAIa,GACZ,EAAKN,SACH,CAAEM,iBAGLvC,qBAEH,EAAKiC,SACH,CAAEK,yBApFW,EAwFnBM,cAAgB,WAAO,IAAD,EAMhB,EAAKP,MALDC,EADY,EACZA,oBADY,EAElBE,8BAFkB,EAGlBC,wBAHkB,EAIlBC,UAJkB,EAKlBH,UAGFM,cAAcP,GACd,EAAKL,SACH,CACEM,UAAW,GACXO,YAAY,KApGC,EAyGnBC,UAAY,WAAO,IACTD,EAAe,EAAKT,MAApBS,WADQ,EAEoB,EAAKT,MAAnCW,EAFU,EAEVA,cAAeC,EAFL,EAEKA,WAEjBH,GACF,EAAKF,gBACLC,cAAcI,GACd,EAAKhB,SAAS,CACZa,YAAaA,EACbE,cAAe,MAGjBC,EAAaN,aAAY,WACD,IAAlBK,GACF,EAAKZ,iBACLS,cAAcI,KAEdD,GAAiB,EACjB,EAAKf,SAAS,CACZe,qBAGHhD,qBACH,EAAKiC,SAAS,CACZa,YAAaA,EACbG,iBAlIa,EAuIjBC,eAAiB,WACfP,aAAY,WACV,IAAMQ,EAAW,EAAKC,OAAOC,QAAQC,gBAErC,EAAKrC,uBAAuBkC,KAC3BpD,qCA1IL,EAAKwD,qBAAuB,KAC5B,EAAKC,OAASC,IAAMC,YACpB,EAAKC,gBAAkBF,IAAMC,YAC7B,EAAKN,OAASK,IAAMC,YAEpB,EAAKrB,MAAQ,CACXuB,WAAW,EACX1B,YAAY,EACZY,YAAY,EACZlB,mBAAoB,UACpBiC,iBAAkBC,IAAOxD,eACzB0C,cAAe,EACfC,WAAY,KACZX,oBAAqB,KACrBE,8BAA+B,KAC/BC,wBAAyB,EACzBF,UAAW,GACXG,UAAW,GAnBI,E,qLAwBjBnC,KAAK4B,aAAa4B,MAAK,WACrB,EAAKb,oB,+IAIUc,EAAWC,EAAWC,GAAW,IAAD,EACX3D,KAAK8B,MADM,EACzCS,WADyC,EAC7BE,gB,+BAiHV,IAAD,EAC4FzC,KAAK8B,MAApFT,GADb,EACCM,WADD,EACaN,oBAA+BkB,GAD5C,EACiCc,UADjC,EAC4Cd,YAAYE,EADxD,EACwDA,cAAea,EADvE,EACuEA,iBAE9E,OACE,kBAACM,EAAA,EAAD,KACE,yBAAKC,UAAWtB,EAAa,0BAA4B,gBACvD,kBAAC,IAAD,CACEsB,UAAU,SACVC,OAAO,EACP5D,MAAOX,eACPY,OAAQb,gBACRyE,IAAK/D,KAAK6C,OACVmB,iBAAiB,aACjBC,iBAAkBhE,sBAEpB,yBACEiE,MAAO,CAAEC,QAAS,SAElB,4BAAQJ,IAAK/D,KAAKoD,gBAAiBlD,MAAOX,eAAcY,OAAQb,mBAElE,yBAAKuE,UAAWtB,EAAa,mCAAqC,yBAE9DA,GAAgC,IAAlBE,EACV,uBAAGoB,UAAU,SAASpB,GACtB,kBAAC2B,EAAA,EAAD,CAAOP,UAAWtB,EAAa,mBAAqB,QAAS8B,IAAG,UAAK9D,cAAL,OAAkB+C,EAAlB,YAI1E,yBAAKO,UAAU,gCACb,kBAACO,EAAA,EAAD,CAAOP,UAAU,2BAA2BQ,IAAG,UAAK9D,cAAL,OAAkBc,EAAlB,WAEjD,yBAAKwC,UAAU,YACb,kBAACS,EAAA,EAAD,CACEC,QAAShC,EAAa,SAAW,UACjCiC,QAASxE,KAAKwC,WAGZD,EACI,YACA,oB,GAvLakC,aCjBjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0311eb87.chunk.js","sourcesContent":["module.exports.WEBCAM_HEIGHT = 480;\nmodule.exports.WEBCAM_WIDTH = 480;\nmodule.exports.EXPRESSION_DETECTION_INTERVAL_MS = 250;\nmodule.exports.TIMER_INTERVAL_MS = 1000;\nmodule.exports.EXPRESSIONS_ANGRY = 'angry';\nmodule.exports.EXPRESSIONS_HAPPY = 'happy';\nmodule.exports.EXPRESSIONS_NEUTRAL = 'neutral';\nmodule.exports.EXPRESSIONS_SAD = 'sad';\nmodule.exports.EXPRESSIONS_SURPRISED = 'surprised';\nmodule.exports.EXPRESSIONS = [this.EXPRESSIONS_ANGRY, this.EXPRESSIONS_HAPPY, this.EXPRESSIONS_NEUTRAL, this.EXPRESSIONS_SAD, this.EXPRESSIONS_SURPRISED];\n\nmodule.exports.VIDEO_CONSTRAINTS = {\n  width: this.WEBCAM_WIDTH,\n  height: this.WEBCAM_HEIGHT,\n  facingMode: 'user',\n};\n\nmodule.exports.MODEL_URL = `${process.env.PUBLIC_URL}/models`;\nmodule.exports.IMAGES_URL = `${process.env.PUBLIC_URL}/img/`;\n","import React, { Component } from 'react';\nimport * as faceapi from 'face-api.js';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Webcam from 'react-webcam';\nimport Button from 'react-bootstrap/Button';\nimport sample from 'lodash/sample';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport {\n  EXPRESSION_DETECTION_INTERVAL_MS,\n  MODEL_URL,\n  WEBCAM_HEIGHT,\n  WEBCAM_WIDTH,\n  VIDEO_CONSTRAINTS,\n  TIMER_INTERVAL_MS,\n  IMAGES_URL,\n  EXPRESSIONS,\n} from './constants';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.fullFaceDescriptions = null;\n    this.canvas = React.createRef();\n    this.canvasPicWebCam = React.createRef();\n    this.webcam = React.createRef();\n\n    this.state = {\n      isLoading: true,\n      isDetected: false,\n      hasStarted: false,\n      detectedExpression: 'neutral',\n      randomExpression: sample(EXPRESSIONS),\n      startingTimer: 3,\n      intervalID: null,\n      gameTimerIntervalID: null,\n      correctEmotionTimerIntervalID: null,\n      gameCorrectEmotionTimer: 5,\n      gameTimer: 60,\n      gameScore: 0,\n    };\n  }\n\n  async componentDidMount() {\n    this.loadModels().then(() => {\n      this.startCapturing();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { hasStarted, startingTimer } = this.state;\n  }\n\n    getFullFaceDescription = async (pictureSrc) => {\n      const image = await faceapi.fetchImage(pictureSrc);\n\n      const detections = await faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n\n      if (detections !== undefined) {\n        console.log(detections.expressions);\n\n        const detectedExpression = Object.keys(detections.expressions).reduce((a, b) => (detections.expressions[a] > detections.expressions[b] ? a : b));\n\n        this.setState({\n          isDetected: true,\n          detectedExpression,\n        });\n      } else {\n        this.setState({\n          isDetected: false,\n        });\n      }\n    };\n\n    loadModels = async () => {\n      await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n      await faceapi.loadFaceExpressionModel(MODEL_URL);\n    };\n\n    gameLogicStart = () => {\n      let { gameTimerIntervalID,\n        correctEmotionTimerIntervalID,\n        gameCorrectEmotionTimer,\n        gameScore,\n        gameTimer,\n      } = this.state;\n\n      this.setState(\n        { gameScore: 0 },\n      );\n\n      gameTimerIntervalID = setInterval(() => {\n        if (gameTimer === 0) {\n          this.gameLogicStop();\n        } else {\n          gameTimer -= 1;\n          console.log(gameTimer);\n          this.setState(\n            { gameTimer },\n          );\n        }\n      }, TIMER_INTERVAL_MS);\n\n      this.setState(\n        { gameTimerIntervalID },\n      );\n    }\n\n  gameLogicStop = () => {\n    const { gameTimerIntervalID,\n      correctEmotionTimerIntervalID,\n      gameCorrectEmotionTimer,\n      gameScore,\n      gameTimer,\n    } = this.state;\n\n    clearInterval(gameTimerIntervalID);\n    this.setState(\n      {\n        gameTimer: 60,\n        hasStarted: false,\n      },\n    );\n  }\n\n  startGame = () => {\n    const { hasStarted } = this.state;\n    let { startingTimer, intervalID } = this.state;\n\n    if (hasStarted) {\n      this.gameLogicStop();\n      clearInterval(intervalID);\n      this.setState({\n        hasStarted: !hasStarted,\n        startingTimer: 3,\n      });\n    } else {\n      intervalID = setInterval(() => {\n        if (startingTimer === 0) {\n          this.gameLogicStart();\n          clearInterval(intervalID);\n        } else {\n          startingTimer -= 1;\n          this.setState({\n            startingTimer,\n          });\n        }\n      }, TIMER_INTERVAL_MS);\n      this.setState({\n        hasStarted: !hasStarted,\n        intervalID,\n      });\n    }\n  };\n\n    startCapturing = () => {\n      setInterval(() => {\n        const imageSrc = this.webcam.current.getScreenshot();\n\n        this.getFullFaceDescription(imageSrc);\n      }, EXPRESSION_DETECTION_INTERVAL_MS);\n    };\n\n    render() {\n      const { isDetected, detectedExpression, isLoading, hasStarted, startingTimer, randomExpression } = this.state;\n\n      return (\n        <Container>\n          <div className={hasStarted ? 'webcam-faces hasStarted' : 'webcam-faces'}>\n            <Webcam\n              className=\"webcam\"\n              audio={false}\n              width={WEBCAM_WIDTH}\n              height={WEBCAM_HEIGHT}\n              ref={this.webcam}\n              screenshotFormat=\"image/jpeg\"\n              videoConstraints={VIDEO_CONSTRAINTS}\n            />\n            <div\n              style={{ display: 'none' }}\n            >\n              <canvas ref={this.canvasPicWebCam} width={WEBCAM_WIDTH} height={WEBCAM_HEIGHT} />\n            </div>\n            <div className={hasStarted ? 'emoji-timer-container hasStarted' : 'emoji-timer-container'}>\n              {\n                hasStarted && startingTimer !== 0\n                  ? <p className=\"timer\">{startingTimer}</p>\n                  : <Image className={hasStarted ? 'emoji hasStarted' : 'emoji'} src={`${IMAGES_URL}${randomExpression}.png`} />\n               }\n            </div>\n          </div>\n          <div className=\"current_expression-container\">\n            <Image className=\"current_expression-emoji\" src={`${IMAGES_URL}${detectedExpression}.png`} />\n          </div>\n          <div className=\"controls\">\n            <Button\n              variant={hasStarted ? 'danger' : 'primary'}\n              onClick={this.startGame}\n            >\n              {\n                hasStarted\n                  ? 'Stop game'\n                  : 'Start game'\n              }\n            </Button>\n          </div>\n        </Container>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}