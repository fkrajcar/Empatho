{"version":3,"sources":["App.jsx","index.js","constants/index.js"],"names":["App","props","getFullFaceDescription","pictureSrc","a","faceapi","image","withFaceExpressions","undefined","detections","console","log","expressions","detectedExpression","Object","keys","reduce","b","setState","isDetected","checkCorrect","state","gameScore","randomExpression","generateRandomExpression","sample","EXPRESSIONS","isCorrect","setTimeout","loadModels","MODEL_URL","gameLogicStart","gameTimerIntervalID","correctEmotionTimerIntervalID","gameCorrectEmotionTimer","gameTimer","setInterval","TIMER_INTERVAL_MS","hasFinished","gameLogicStop","intervalID","clearInterval","hasStarted","startingTimer","startGame","closeModal","startCapturing","imageSrc","webcam","current","getScreenshot","EXPRESSION_DETECTION_INTERVAL_MS","fullFaceDescriptions","canvas","React","createRef","canvasPicWebCam","isLoading","this","then","prevProps","prevState","snapshot","Container","className","audio","width","WEBCAM_WIDTH","height","WEBCAM_HEIGHT","ref","screenshotFormat","videoConstraints","VIDEO_CONSTRAINTS","style","display","Image","src","IMAGES_URL","icon","faClock","faCheck","Button","variant","onClick","isOpen","onRequestClose","CUSTOM_MODAL_STYLE","Component","ReactDOM","render","document","getElementById","module","exports","EXPRESSIONS_ANGRY","EXPRESSIONS_HAPPY","EXPRESSIONS_NEUTRAL","EXPRESSIONS_SAD","EXPRESSIONS_SURPRISED","facingMode","process","content","top","left","right","bottom"],"mappings":"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","file":"static/js/main.89bbb3cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as faceapi from 'face-api.js';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Webcam from 'react-webcam';\nimport Button from 'react-bootstrap/Button';\nimport sample from 'lodash/sample';\nimport { faClock, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-modal';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport {\n  EXPRESSION_DETECTION_INTERVAL_MS,\n  MODEL_URL,\n  WEBCAM_HEIGHT,\n  WEBCAM_WIDTH,\n  VIDEO_CONSTRAINTS,\n  TIMER_INTERVAL_MS,\n  IMAGES_URL,\n  EXPRESSIONS,\n  CUSTOM_MODAL_STYLE,\n} from './constants';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.fullFaceDescriptions = null;\n    this.canvas = React.createRef();\n    this.canvasPicWebCam = React.createRef();\n    this.webcam = React.createRef();\n\n    this.state = {\n      isLoading: true,\n      isDetected: false,\n      hasStarted: false,\n      isCorrect: false,\n      hasFinished: false,\n      detectedExpression: 'neutral',\n      randomExpression: sample(EXPRESSIONS),\n      startingTimer: 3,\n      intervalID: null,\n      gameTimerIntervalID: null,\n      correctEmotionTimerIntervalID: null,\n      gameCorrectEmotionTimer: 5,\n      gameTimer: 60,\n      gameScore: 0,\n    };\n  }\n\n  async componentDidMount() {\n    this.loadModels().then(() => {\n      this.startCapturing();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { hasStarted, startingTimer } = this.state;\n  }\n\n    getFullFaceDescription = async (pictureSrc) => {\n      const image = await faceapi.fetchImage(pictureSrc);\n\n      const detections = await faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n\n      if (detections !== undefined) {\n        console.log(detections.expressions);\n\n        const detectedExpression = Object.keys(detections.expressions).reduce((a, b) => (detections.expressions[a] > detections.expressions[b] ? a : b));\n\n        this.setState({\n          isDetected: true,\n          detectedExpression,\n        });\n      } else {\n        this.setState({\n          isDetected: false,\n        });\n      }\n    };\n\n  checkCorrect = () => {\n    const { detectedExpression } = this.state;\n    let { gameScore, randomExpression } = this.state;\n\n    if (detectedExpression === randomExpression) {\n      gameScore += 1;\n\n      let generateRandomExpression = sample(EXPRESSIONS);\n\n      while (randomExpression === generateRandomExpression && randomExpression === detectedExpression) {\n        generateRandomExpression = sample(EXPRESSIONS);\n      }\n\n      randomExpression = generateRandomExpression;\n\n      this.setState({ isCorrect: true, gameScore, randomExpression });\n\n      setTimeout(() => {\n        this.setState({ isCorrect: false });\n      }, 1500);\n    }\n  }\n\n    loadModels = async () => {\n      await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n      await faceapi.loadFaceExpressionModel(MODEL_URL);\n    };\n\n    gameLogicStart = () => {\n      let { gameTimerIntervalID,\n        correctEmotionTimerIntervalID,\n        gameCorrectEmotionTimer,\n        gameScore,\n        gameTimer,\n        randomExpression,\n        detectedExpression,\n      } = this.state;\n\n      this.setState(\n        { gameScore: 0 },\n      );\n\n      correctEmotionTimerIntervalID = setInterval(() => {\n        if (gameCorrectEmotionTimer === 0) {\n          console.log('0', gameCorrectEmotionTimer);\n          this.setState({\n            gameCorrectEmotionTimer: 5,\n            correctEmotionTimerIntervalID,\n          });\n        } else {\n          gameCorrectEmotionTimer -= 1;\n          console.log(gameCorrectEmotionTimer);\n          this.setState(\n            { gameCorrectEmotionTimer },\n          );\n        }\n      }, TIMER_INTERVAL_MS);\n\n      gameTimerIntervalID = setInterval(() => {\n        if (gameTimer === 0) {\n          this.setState({ hasFinished: true });\n          this.gameLogicStop();\n        } else {\n          gameTimer -= 1;\n          this.checkCorrect();\n          if (gameTimer % 10 === 0) {\n            let generateRandomExpression = sample(EXPRESSIONS);\n\n            while (randomExpression === generateRandomExpression && randomExpression === detectedExpression) {\n              generateRandomExpression = sample(EXPRESSIONS);\n            }\n\n            randomExpression = generateRandomExpression;\n\n            this.setState(\n              { randomExpression },\n            );\n          }\n\n          this.setState(\n            { gameTimer },\n          );\n        }\n      }, TIMER_INTERVAL_MS);\n\n      this.setState(\n        { gameTimerIntervalID, correctEmotionTimerIntervalID },\n      );\n    }\n\n  gameLogicStop = () => {\n    const { gameTimerIntervalID,\n      correctEmotionTimerIntervalID,\n      gameCorrectEmotionTimer,\n      gameScore,\n      gameTimer,\n      intervalID,\n    } = this.state;\n\n    clearInterval(intervalID);\n    clearInterval(gameTimerIntervalID);\n    clearInterval(correctEmotionTimerIntervalID);\n    this.setState(\n      {\n        hasStarted: false,\n        startingTimer: 3,\n      },\n    );\n  }\n\n  startGame = () => {\n    const { hasStarted } = this.state;\n    let { startingTimer, intervalID } = this.state;\n\n    if (hasStarted) {\n      this.gameLogicStop();\n    } else {\n      this.setState({\n        gameTimer: 60,\n        gameScore: 0,\n      });\n      intervalID = setInterval(() => {\n        if (startingTimer === 0) {\n          this.gameLogicStart();\n          clearInterval(intervalID);\n        } else {\n          startingTimer -= 1;\n          this.setState({\n            startingTimer,\n          });\n        }\n      }, TIMER_INTERVAL_MS);\n      this.setState({\n        hasStarted: !hasStarted,\n        intervalID,\n      });\n    }\n  };\n\n   closeModal = () => {\n     this.setState({ hasFinished: false });\n   }\n\n    startCapturing = () => {\n      setInterval(() => {\n        const imageSrc = this.webcam.current.getScreenshot();\n\n        this.getFullFaceDescription(imageSrc);\n      }, EXPRESSION_DETECTION_INTERVAL_MS);\n    };\n\n    render() {\n      const { hasFinished, isDetected, detectedExpression, isLoading, hasStarted, startingTimer, randomExpression, gameTimer, gameScore, isCorrect } = this.state;\n\n      return (\n        <Container>\n          <div className={hasStarted ? 'webcam-faces hasStarted' : 'webcam-faces'}>\n            <Webcam\n              className=\"webcam\"\n              audio={false}\n              width={WEBCAM_WIDTH}\n              height={WEBCAM_HEIGHT}\n              ref={this.webcam}\n              screenshotFormat=\"image/jpeg\"\n              videoConstraints={VIDEO_CONSTRAINTS}\n            />\n            <div\n              style={{ display: 'none' }}\n            >\n              <canvas ref={this.canvasPicWebCam} width={WEBCAM_WIDTH} height={WEBCAM_HEIGHT} />\n            </div>\n            <div className={hasStarted ? 'emoji-timer-container hasStarted' : 'emoji-timer-container'}>\n              {\n                hasStarted && startingTimer !== 0\n                  ? <p className=\"timer\">{startingTimer}</p>\n                  : (\n                    <Image\n                      className={hasStarted ? 'emoji hasStarted' : 'emoji'}\n                      src={\n                      isCorrect\n                        ? `${IMAGES_URL}check-circle-regular.svg`\n                        : `${IMAGES_URL}${randomExpression}.png`\n                  }\n                    />\n                  )\n               }\n            </div>\n          </div>\n          <div className=\"current_expression-container\">\n            <div className=\"spacer\" />\n            <Image className=\"current_expression-emoji\" src={`${IMAGES_URL}${detectedExpression}.png`} />\n            <div className={hasStarted ? 'game-info' : 'game-info is-hidden'}>\n              <div className=\"timer\">\n                <FontAwesomeIcon icon={faClock} /> <span className=\"timer-text\">{gameTimer}</span>\n              </div>\n              <div className=\"timer\">\n                <FontAwesomeIcon icon={faCheck} /> <span className=\"timer-text\">{gameScore}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"controls\">\n            <Button\n              variant={hasStarted ? 'danger' : 'primary'}\n              onClick={this.startGame}\n            >\n              {\n                hasStarted\n                  ? 'Stop game'\n                  : 'Start game'\n              }\n            </Button>\n          </div>\n          <Modal\n            isOpen={hasFinished}\n            onRequestClose={this.closeModal}\n            style={CUSTOM_MODAL_STYLE}\n          >\n            <Image\n              className=\"emoji emoji-modal\"\n              src={`${IMAGES_URL}happy.png`}\n            />\n            <h3>Bravo.</h3>\n            <h4>Ukupno ostvareni broj bodova:</h4>\n            <h3>{gameScore}</h3>\n            <Button onClick={this.closeModal}>ZATVORITI</Button>\n          </Modal>\n        </Container>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports.WEBCAM_HEIGHT = 480;\nmodule.exports.WEBCAM_WIDTH = 480;\nmodule.exports.EXPRESSION_DETECTION_INTERVAL_MS = 250;\nmodule.exports.TIMER_INTERVAL_MS = 1000;\nmodule.exports.EXPRESSIONS_ANGRY = 'angry';\nmodule.exports.EXPRESSIONS_HAPPY = 'happy';\nmodule.exports.EXPRESSIONS_NEUTRAL = 'neutral';\nmodule.exports.EXPRESSIONS_SAD = 'sad';\nmodule.exports.EXPRESSIONS_SURPRISED = 'surprised';\nmodule.exports.EXPRESSIONS = [this.EXPRESSIONS_ANGRY, this.EXPRESSIONS_HAPPY, this.EXPRESSIONS_NEUTRAL, this.EXPRESSIONS_SAD, this.EXPRESSIONS_SURPRISED];\n\nmodule.exports.VIDEO_CONSTRAINTS = {\n  width: this.WEBCAM_WIDTH,\n  height: this.WEBCAM_HEIGHT,\n  facingMode: 'user',\n};\n\nmodule.exports.MODEL_URL = `${process.env.PUBLIC_URL}/models`;\nmodule.exports.IMAGES_URL = `${process.env.PUBLIC_URL}/img/`;\n\nmodule.exports.CUSTOM_MODAL_STYLE = {\n  content: {\n    top: '200px',\n    left: '350px',\n    right: '350px',\n    bottom: '200px',\n    display: 'flex',\n    'flex-direction': 'column',\n    'justify-content': 'space-between',\n    'text-align': 'center',\n  },\n};\n"],"sourceRoot":""}