{"version":3,"sources":["App.jsx","index.js","constants/index.js"],"names":["App","props","getFullFaceDescription","pictureSrc","a","faceapi","image","withFaceExpressions","undefined","detections","detectedExpression","Object","keys","expressions","reduce","b","setState","checkCorrect","state","gameScore","randomExpression","generateRandomExpression","sample","EXPRESSIONS","isCorrect","setTimeout","loadModels","MODEL_URL","gameLogicStart","gameTimerIntervalID","correctEmotionTimerIntervalID","gameCorrectEmotionTimer","gameTimer","setInterval","TIMER_INTERVAL_MS","hasFinished","gameLogicStop","intervalID","clearInterval","hasStarted","startingTimer","startGame","closeModal","startCapturing","imageSrc","webcam","current","getScreenshot","EXPRESSION_DETECTION_INTERVAL_MS","fullFaceDescriptions","canvas","React","createRef","canvasPicWebCam","isLoading","this","then","Container","className","audio","width","WEBCAM_WIDTH","height","WEBCAM_HEIGHT","ref","screenshotFormat","videoConstraints","VIDEO_CONSTRAINTS","style","display","Image","src","IMAGES_URL","icon","faClock","faCheck","Button","variant","onClick","isOpen","onRequestClose","CUSTOM_MODAL_STYLE","Component","ReactDOM","render","document","getElementById","module","exports","EXPRESSIONS_ANGRY","EXPRESSIONS_HAPPY","EXPRESSIONS_NEUTRAL","EXPRESSIONS_SAD","EXPRESSIONS_SURPRISED","facingMode","process","content","top","left","right","bottom"],"mappings":"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","file":"static/js/main.ca2b4b42.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Webcam from 'react-webcam';\r\nimport Button from 'react-bootstrap/Button';\r\nimport sample from 'lodash/sample';\r\nimport { faClock, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Modal from 'react-modal';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport {\r\n  EXPRESSION_DETECTION_INTERVAL_MS,\r\n  MODEL_URL,\r\n  WEBCAM_HEIGHT,\r\n  WEBCAM_WIDTH,\r\n  VIDEO_CONSTRAINTS,\r\n  TIMER_INTERVAL_MS,\r\n  IMAGES_URL,\r\n  EXPRESSIONS,\r\n  CUSTOM_MODAL_STYLE,\r\n} from './constants';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fullFaceDescriptions = null;\r\n    this.canvas = React.createRef();\r\n    this.canvasPicWebCam = React.createRef();\r\n    this.webcam = React.createRef();\r\n\r\n    this.state = {\r\n      hasStarted: false,\r\n      isCorrect: false,\r\n      hasFinished: false,\r\n      detectedExpression: 'neutral',\r\n      randomExpression: sample(EXPRESSIONS),\r\n      startingTimer: 3,\r\n      intervalID: null,\r\n      gameTimerIntervalID: null,\r\n      correctEmotionTimerIntervalID: null,\r\n      gameCorrectEmotionTimer: 5,\r\n      gameTimer: 60,\r\n      gameScore: 0,\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.loadModels().then(() => {\r\n      this.startCapturing();\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n      })\r\n    });\r\n  }\r\n\r\n    getFullFaceDescription = async (pictureSrc) => {\r\n      const image = await faceapi.fetchImage(pictureSrc);\r\n\r\n      const detections = await faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\r\n\r\n      if (detections !== undefined) {\r\n        const detectedExpression = Object.keys(detections.expressions).reduce((a, b) => (detections.expressions[a] > detections.expressions[b] ? a : b));\r\n\r\n        this.setState({\r\n          detectedExpression,\r\n        });\r\n      }\r\n    };\r\n\r\n  checkCorrect = () => {\r\n    const { detectedExpression } = this.state;\r\n    let { gameScore, randomExpression } = this.state;\r\n\r\n    if (detectedExpression === randomExpression) {\r\n      gameScore += 1;\r\n\r\n      let generateRandomExpression = sample(EXPRESSIONS);\r\n\r\n      while (randomExpression === generateRandomExpression && randomExpression === detectedExpression) {\r\n        generateRandomExpression = sample(EXPRESSIONS);\r\n      }\r\n\r\n      randomExpression = generateRandomExpression;\r\n\r\n      this.setState({ isCorrect: true, gameScore, randomExpression });\r\n\r\n      setTimeout(() => {\r\n        this.setState({ isCorrect: false });\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n    loadModels = async () => {\r\n      await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n      await faceapi.loadFaceExpressionModel(MODEL_URL);\r\n    };\r\n\r\n    gameLogicStart = () => {\r\n      let {\r\n        gameTimerIntervalID,\r\n        correctEmotionTimerIntervalID,\r\n        gameCorrectEmotionTimer,\r\n        gameTimer,\r\n        randomExpression,\r\n      } = this.state;\r\n      const { detectedExpression } = this.state;\r\n      this.setState(\r\n        { gameScore: 0 },\r\n      );\r\n\r\n      correctEmotionTimerIntervalID = setInterval(() => {\r\n        if (gameCorrectEmotionTimer === 0) {\r\n          this.setState({\r\n            gameCorrectEmotionTimer: 5,\r\n            correctEmotionTimerIntervalID,\r\n          });\r\n        } else {\r\n          gameCorrectEmotionTimer -= 1;\r\n\r\n          this.setState(\r\n            { gameCorrectEmotionTimer },\r\n          );\r\n        }\r\n      }, TIMER_INTERVAL_MS);\r\n\r\n      gameTimerIntervalID = setInterval(() => {\r\n        if (gameTimer === 0) {\r\n          this.setState({ hasFinished: true });\r\n          this.gameLogicStop();\r\n        } else {\r\n          gameTimer -= 1;\r\n          this.checkCorrect();\r\n          if (gameTimer % 10 === 0) {\r\n            let generateRandomExpression = sample(EXPRESSIONS);\r\n\r\n            while (randomExpression === generateRandomExpression && randomExpression === detectedExpression) {\r\n              generateRandomExpression = sample(EXPRESSIONS);\r\n            }\r\n\r\n            randomExpression = generateRandomExpression;\r\n\r\n            this.setState(\r\n              { randomExpression },\r\n            );\r\n          }\r\n\r\n          this.setState(\r\n            { gameTimer },\r\n          );\r\n        }\r\n      }, TIMER_INTERVAL_MS);\r\n\r\n      this.setState(\r\n        { gameTimerIntervalID, correctEmotionTimerIntervalID },\r\n      );\r\n    }\r\n\r\n  gameLogicStop = () => {\r\n    const {\r\n      gameTimerIntervalID,\r\n      correctEmotionTimerIntervalID,\r\n      intervalID,\r\n    } = this.state;\r\n\r\n    clearInterval(intervalID);\r\n    clearInterval(gameTimerIntervalID);\r\n    clearInterval(correctEmotionTimerIntervalID);\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        startingTimer: 3,\r\n      },\r\n    );\r\n  }\r\n\r\n  startGame = () => {\r\n    const { hasStarted } = this.state;\r\n    let { startingTimer, intervalID } = this.state;\r\n\r\n    if (hasStarted) {\r\n      this.gameLogicStop();\r\n    } else {\r\n      this.setState({\r\n        gameTimer: 60,\r\n        gameScore: 0,\r\n      });\r\n      intervalID = setInterval(() => {\r\n        if (startingTimer === 0) {\r\n          this.gameLogicStart();\r\n          clearInterval(intervalID);\r\n        } else {\r\n          startingTimer -= 1;\r\n          this.setState({\r\n            startingTimer,\r\n          });\r\n        }\r\n      }, TIMER_INTERVAL_MS);\r\n      this.setState({\r\n        hasStarted: !hasStarted,\r\n        intervalID,\r\n      });\r\n    }\r\n  };\r\n\r\n   closeModal = () => {\r\n     this.setState({ hasFinished: false });\r\n   }\r\n\r\n    startCapturing = () => {\r\n      setInterval(() => {\r\n        const imageSrc = this.webcam.current.getScreenshot();\r\n\r\n        this.getFullFaceDescription(imageSrc);\r\n      }, EXPRESSION_DETECTION_INTERVAL_MS);\r\n    };\r\n\r\n    render() {\r\n      const { hasFinished, detectedExpression, hasStarted, startingTimer,\r\n        randomExpression, gameTimer, gameScore, isCorrect, isLoading } = this.state;\r\n\r\n      return (\r\n        <Container>\r\n          <div className={hasStarted ? 'webcam-faces hasStarted' : 'webcam-faces'}>\r\n            <Webcam\r\n              className=\"webcam\"\r\n              audio={false}\r\n              width={WEBCAM_WIDTH}\r\n              height={WEBCAM_HEIGHT}\r\n              ref={this.webcam}\r\n              screenshotFormat=\"image/jpeg\"\r\n              videoConstraints={VIDEO_CONSTRAINTS}\r\n            />\r\n            <div\r\n              style={{ display: 'none' }}\r\n            >\r\n              <canvas ref={this.canvasPicWebCam} width={WEBCAM_WIDTH} height={WEBCAM_HEIGHT} />\r\n            </div>\r\n            <div className={hasStarted ? 'emoji-timer-container hasStarted' : 'emoji-timer-container'}>\r\n              {\r\n                hasStarted && startingTimer !== 0\r\n                  ? <p className=\"timer\">{startingTimer}</p>\r\n                  : (\r\n                    <Image\r\n                      className={hasStarted ? 'emoji hasStarted' : 'emoji'}\r\n                      src={\r\n                      isCorrect\r\n                        ? `${IMAGES_URL}check-circle-regular.svg`\r\n                        : `${IMAGES_URL}${randomExpression}.png`\r\n                  }\r\n                    />\r\n                  )\r\n               }\r\n            </div>\r\n          </div>\r\n          <div className=\"current_expression-container\">\r\n            <div className=\"spacer\" />\r\n            <Image className=\"current_expression-emoji\" src={`${IMAGES_URL}${detectedExpression}.png`} />\r\n            <div className={hasStarted ? 'game-info' : 'game-info is-hidden'}>\r\n              <div className=\"timer padding-b-30\">\r\n                <FontAwesomeIcon icon={faClock} /> <span className=\"timer-text\">{`Vrijeme: ${gameTimer}`}</span>\r\n              </div>\r\n              <div className=\"timer padding-0\">\r\n                <FontAwesomeIcon icon={faCheck} /> <span className=\"timer-text\">{`Rezultat: ${gameScore}`}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"controls\">\r\n            {!isLoading && (\r\n            <Button\r\n              variant={hasStarted ? 'danger' : 'primary'}\r\n              onClick={this.startGame}\r\n            >\r\n              {\r\n                hasStarted\r\n                  ? 'Zaustavi igru'\r\n                  : 'Pokreni igru'\r\n              }\r\n            </Button>\r\n            )}\r\n          </div>\r\n          <Modal\r\n            isOpen={hasFinished}\r\n            onRequestClose={this.closeModal}\r\n            style={CUSTOM_MODAL_STYLE}\r\n          >\r\n            <Image\r\n              className=\"emoji emoji-modal\"\r\n              src={`${IMAGES_URL}happy.png`}\r\n            />\r\n            <h3>Bravo.</h3>\r\n            <h4>Ostvareni broj bodova:</h4>\r\n            <h3>{gameScore}</h3>\r\n            <Button onClick={this.closeModal}>ZATVORITI</Button>\r\n          </Modal>\r\n        </Container>\r\n      );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","module.exports.WEBCAM_HEIGHT = 480;\r\nmodule.exports.WEBCAM_WIDTH = 480;\r\nmodule.exports.EXPRESSION_DETECTION_INTERVAL_MS = 250;\r\nmodule.exports.TIMER_INTERVAL_MS = 1000;\r\nmodule.exports.EXPRESSIONS_ANGRY = 'angry';\r\nmodule.exports.EXPRESSIONS_HAPPY = 'happy';\r\nmodule.exports.EXPRESSIONS_NEUTRAL = 'neutral';\r\nmodule.exports.EXPRESSIONS_SAD = 'sad';\r\nmodule.exports.EXPRESSIONS_SURPRISED = 'surprised';\r\nmodule.exports.EXPRESSIONS = [this.EXPRESSIONS_ANGRY, this.EXPRESSIONS_HAPPY, this.EXPRESSIONS_NEUTRAL, this.EXPRESSIONS_SAD, this.EXPRESSIONS_SURPRISED];\r\n\r\nmodule.exports.VIDEO_CONSTRAINTS = {\r\n  width: this.WEBCAM_WIDTH,\r\n  height: this.WEBCAM_HEIGHT,\r\n  facingMode: 'user',\r\n};\r\n\r\nmodule.exports.MODEL_URL = `${process.env.PUBLIC_URL}/models`;\r\nmodule.exports.IMAGES_URL = `${process.env.PUBLIC_URL}/img/`;\r\n\r\nmodule.exports.CUSTOM_MODAL_STYLE = {\r\n  content: {\r\n    top: '200px',\r\n    left: '350px',\r\n    right: '350px',\r\n    bottom: '200px',\r\n    display: 'flex',\r\n    'flex-direction': 'column',\r\n    'justify-content': 'space-between',\r\n    'text-align': 'center',\r\n  },\r\n};\r\n"],"sourceRoot":""}